{"version":3,"sources":["LogoTest.png","headerLogo.jpg","actions/index.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","pages/Login.js","Components/Header.jsx","utils/utils.js","Components/TableCell.jsx","Components/TableHeader.jsx","Components/ExpensesTable.jsx","Components/AddExpenseButton.jsx","Components/ExpensesInput.jsx","Components/ExpensesSelect.jsx","Components/ExpensesBoard.jsx","pages/Wallet.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","deleteExpenseAction","expenses","type","wallet","editExpenseAction","buttonText","idToEdit","INITIAL_STATE","email","userReducer","state","action","user","currencies","walletReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","props","password","disabled","handleChange","bind","handleSubmit","validForm","sendLogin","this","length","includes","split","every","error","setState","history","UserLoginAction","localStorage","setItem","push","target","name","value","event","preventDefault","className","src","LoginLogo","alt","onSubmit","data-testid","onChange","onKeyUp","placeholder","onClick","Component","connect","dispatch","UserLogin","Header","handleExpenses","id","headerLogo","changes","USD","CAD","EUR","GBP","ARS","BTC","LTC","JPY","CHF","AUD","CNY","ILS","ETH","XRP","TableCell","deleteExpense","editExpense","expense","deleteExpenses","editExpenses","arrayFiltered","filter","exp","exchangeRates","currency","description","tag","method","Object","values","correctCurrency","curr","code","calc","Number","ask","correctExpense","parseInt","cambio","exc","parseFloat","toFixed","TableHeader","map","header","key","ExpensesTable","AddExpenseButton","addExpense","ExpensesInput","info","htmlFor","toUpperCase","substring","ExpensesSelect","data","item","ExpensesBoard","exchangeRatesRequisition","addOrEditExpenses","fetch","response","json","USDT","walletAction","find","getExpenseToEdit","deleteOldValue","expensesEdited","sort","a","b","console","log","currencyCodes","walletExpenses","Wallet","createLogin","toMatch","indexOf","substr","expensesArray","reduce","getItem","React","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c508ae8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LogoTest.259e22ce.png\";","module.exports = __webpack_public_path__ + \"static/media/headerLogo.6899dee4.jpg\";","// Coloque aqui suas actions\nexport const LOGIN = 'LOGIN';\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\n\nexport function UserLogin(email) {\n  return ({\n    type: LOGIN,\n    user: {\n      email,\n    },\n  });\n}\n\nexport function walletExpenses(expenses) {\n  return ({\n    type: ADD_EXPENSE,\n    wallet: {\n      expenses,\n    },\n  });\n}\n\n// stackOverflow https://stackoverflow.com/questions/37777525/delete-an-item-from-redux-state/37777800\nexport function deleteExpenseAction(expenses) {\n  return ({\n    type: DELETE_EXPENSE,\n    wallet: {\n      expenses,\n    },\n  });\n}\n\nexport function editExpenseAction(buttonText, idToEdit) {\n  return ({\n    type: EDIT_EXPENSE,\n    wallet: {\n      buttonText,\n      idToEdit,\n    },\n  });\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { LOGIN } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nfunction userReducer(state = INITIAL_STATE, action) {\n  const { type, user } = action;\n  switch (type) {\n  case LOGIN:\n    return {\n      ...state,\n      email: user.email,\n    };\n\n  default:\n    return state;\n  }\n}\n\nexport default userReducer;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { ADD_EXPENSE, DELETE_EXPENSE, EDIT_EXPENSE } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  buttonText: 'Adicionar despesa',\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  const { type, wallet } = action;\n  switch (type) {\n  case ADD_EXPENSE:\n    return {\n      ...state,\n      currencies: wallet.currencies,\n      expenses: [...state.expenses, wallet.expenses],\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      currencies: wallet.currencies,\n      expenses: wallet.expenses,\n    };\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      // currencies: wallet.currencies,\n      // expenses: wallet.expenses,\n      buttonText: wallet.buttonText,\n      idToEdit: wallet.idToEdit,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './user';\nimport walletReducer from './wallet';\n// import wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  wallet: walletReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport '../Styles/Login.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { UserLogin } from '../actions/index';\nimport LoginLogo from '../LogoTest.png';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      disabled: true,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validForm = this.validForm.bind(this);\n    this.sendLogin = this.sendLogin.bind(this);\n  }\n\n  validForm() {\n    const { password, email } = this.state;\n    const passwordMinLength = 6;\n\n    const errorCases = [\n      password.length < passwordMinLength,\n      !email.includes('@'),\n      email.split('@').length > 2,\n      !email.includes('.com'),\n    ];\n\n    const filledCorrect = errorCases.every((error) => error === false);\n\n    if (filledCorrect) {\n      this.setState({ disabled: false });\n    } else {\n      this.setState({ disabled: true });\n    }\n  }\n\n  sendLogin() {\n    const { email } = this.state;\n\n    const { history, UserLoginAction } = this.props;\n    localStorage.setItem('email', email);\n    UserLoginAction(email);\n\n    history.push('/carteira');\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    const { email, password, disabled } = this.state;\n    return (\n      <div className=\"login-screen\">\n        <img src={ LoginLogo } alt=\"Login logo\" className=\"login-logo\" />\n        <div className=\"login-container\">\n          <form onSubmit={ this.handleSubmit }>\n            <input\n              data-testid=\"email-input\"\n              className=\"login-input\"\n              type=\"email\"\n              name=\"email\"\n              value={ email }\n              onChange={ this.handleChange }\n              onKeyUp={ this.validForm }\n              placeholder=\"Email\"\n            />\n            <input\n              data-testid=\"password-input\"\n              className=\"login-input\"\n              type=\"password\"\n              name=\"password\"\n              value={ password }\n              onChange={ this.handleChange }\n              onKeyUp={ this.validForm }\n              placeholder=\"Password\"\n            />\n            <button\n              type=\"submit\"\n              className=\"login-button\"\n              disabled={ disabled }\n              onClick={ this.sendLogin }\n            >\n              Entrar\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  UserLoginAction: (email) => dispatch(UserLogin(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  UserLoginAction: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport headerLogo from '../headerLogo.jpg';\n\nclass Header extends Component {\n  render() {\n    const { user, handleExpenses, email } = this.props;\n    return (\n      <header className=\"header-container\">\n        <span id=\"user\">{ user }</span>\n        <img src={ headerLogo } alt=\"header Logo\" />\n        <span id=\"user-email\" data-testid=\"email-field\">{`Email: ${email}`}</span>\n        <div className=\"expenses-container\">\n          <span data-testid=\"total-field\" id=\"total-field\">\n            {`Despesa Total: R$ ${handleExpenses()}` }\n          </span>\n          <span data-testid=\"header-currency-field\" id=\"currency\"> BRL</span>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  handleExpenses: PropTypes.func.isRequired,\n  user: PropTypes.string.isRequired,\n};\n","const changes = {\n  USD: 'Dólar Comercial',\n  CAD: 'Dólar Canadense',\n  EUR: 'Euro',\n  GBP: 'Libra Esterlina',\n  ARS: 'Peso',\n  BTC: 'Bitcoin',\n  LTC: 'Litecoin',\n  JPY: 'Yen',\n  CHF: 'Swiss',\n  AUD: 'Dólar Australiano',\n  CNY: 'Yuan',\n  ILS: 'Israeli New Shekew',\n  ETH: 'Ethereum',\n  XRP: 'Riple',\n};\n\nexport default changes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../Styles/TableCell.css';\nimport { connect } from 'react-redux';\nimport { deleteExpenseAction, editExpenseAction } from '../actions';\nimport changes from '../utils/utils';\n\nclass TableCell extends Component {\n  constructor() {\n    super();\n    this.deleteExpense = this.deleteExpense.bind(this);\n    this.editExpense = this.editExpense.bind(this);\n  }\n\n  deleteExpense() {\n    const { expense: { id } } = this.props;\n    const { deleteExpenses, editExpenses, expenses } = this.props;\n    const arrayFiltered = expenses.filter((exp) => exp.id !== id);\n    if (arrayFiltered.length < 1) editExpenses('Adicionar despesa');\n    deleteExpenses(arrayFiltered);\n  }\n\n  editExpense() {\n    const { editExpenses, expense: { id } } = this.props;\n    editExpenses('Editar despesa', id);\n  }\n\n  render() {\n    const { expense: { exchangeRates,\n      currency, description, tag, method, value } } = this.props;\n    const currencies = Object.values(exchangeRates);\n    const correctCurrency = currencies.filter((curr) => curr.code === currency);\n    const calc = Number(value) * correctCurrency[0].ask;\n    const precision = 100;\n    const correctExpense = parseInt(calc * precision, 10) / precision;\n    const cambio = currencies.filter((exc) => exc.code === currency)[0].ask;\n\n    return (\n      <tr>\n        <td>{description}</td>\n        <td>{tag}</td>\n        <td>{method}</td>\n        <td>{`${parseInt(value, 10)}`}</td>\n        <td>{changes[currency]}</td>\n        <td>{parseFloat(cambio).toFixed(2)}</td>\n        <td>{correctExpense}</td>\n        <td>Real</td>\n        <td>\n          <button\n            type=\"button\"\n            data-testid=\"delete-btn\"\n            className=\"delete-button\"\n            onClick={ this.deleteExpense }\n          >\n            Delete\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"edit-btn\"\n            className=\"delete-button\"\n            onClick={ this.editExpense }\n          >\n            Editar\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpenses: (expenses) => dispatch(\n    deleteExpenseAction(expenses),\n  ),\n  editExpenses: (buttonText, idToEdit) => dispatch(\n    editExpenseAction(buttonText, idToEdit),\n  ),\n});\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableCell);\n\nTableCell.propTypes = {\n  expenses: PropTypes.objectOf(PropTypes.string).isRequired,\n  expense: PropTypes.objectOf(PropTypes.string).isRequired,\n  deleteExpenses: PropTypes.func.isRequired,\n  editExpenses: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nexport default class TableHeader extends Component {\n  render() {\n    const tableHeaders = ['Descrição', 'Tag', 'Método de pagamento',\n      'Valor', 'Moeda', 'Câmbio utilizado', 'Valor convertido',\n      'Moeda de conversão', 'Excluir'];\n\n    return (\n      <tr>\n        { tableHeaders.map((header) => (\n          <th key={ header }>\n            { header }\n          </th>)) }\n      </tr>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TableCell from './TableCell';\nimport TableHeader from './TableHeader';\n\nclass ExpensesTable extends Component {\n  render() {\n    const { expenses } = this.props;\n    return (\n      <table className=\"expenses-table\">\n        <TableHeader />\n        { expenses.map((expense) => (\n          <TableCell\n            expense={ expense }\n            key={ expense.id }\n          />))}\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(ExpensesTable);\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass AddExpenseButton extends Component {\n  render() {\n    const { addExpense, buttonText } = this.props;\n    return (\n      <button className=\"add-button\" type=\"submit\" onClick={ addExpense }>\n        { buttonText }\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  buttonText: state.wallet.buttonText,\n});\n\nexport default connect(mapStateToProps)(AddExpenseButton);\n\nAddExpenseButton.propTypes = {\n  addExpense: PropTypes.func.isRequired,\n  buttonText: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ExpensesInput extends Component {\n  render() {\n    const { name, type, info, onChange } = this.props;\n    return (\n      <label htmlFor={ name }>\n        { `${name[0].toUpperCase()}${name.substring(1, name.length)}` }\n        <input\n          type={ type }\n          name={ name }\n          id={ name }\n          onChange={ onChange }\n          value={ info }\n        />\n      </label>\n    );\n  }\n}\n\nExpensesInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  info: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ExpensesSelect extends Component {\n  render() {\n    const { name, onChange, info, data } = this.props;\n    const id = name === 'currency' ? 'coin' : name;\n    return (\n      <label htmlFor={ name } className=\"expenses-select\">\n        { `${name[0].toUpperCase()}${name.substring(1, name.length)}` }\n        <select\n          name={ name }\n          id={ id }\n          onChange={ onChange }\n          value={ info }\n        >\n          { name === 'currency' ? data.map(({ code }) => (\n            <option key={ code }>\n              {code}\n            </option>))\n            : data.map((item) => (\n              <option key={ item }>\n                {item}\n              </option>))}\n        </select>\n      </label>\n    );\n  }\n}\n\nExpensesSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  info: PropTypes.string.isRequired,\n  data: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AddExpenseButton from './AddExpenseButton';\nimport ExpensesInput from './ExpensesInput';\nimport { deleteExpenseAction, editExpenseAction, walletExpenses } from '../actions/index';\nimport ExpensesSelect from './ExpensesSelect';\n\nclass ExpensesBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: 0,\n      description: 'none',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n\n    this.exchangeRatesRequisition = this.exchangeRatesRequisition.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addOrEditExpenses = this.addOrEditExpenses.bind(this);\n  }\n\n  componentDidMount() {\n    this.exchangeRatesRequisition();\n  }\n\n  async exchangeRatesRequisition() {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await response.json();\n    delete data.USDT;\n    this.setState({\n      exchangeRates: data,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async addOrEditExpenses() {\n    await this.exchangeRatesRequisition();\n    const { walletAction, buttonText, idToEdit,\n      expenses, deleteExpenses, editExpenses } = this.props;\n    const { value, currency, exchangeRates, id } = this.state;\n\n    const { description, method, tag } = this.state;\n    if (buttonText === 'Adicionar despesa') {\n      walletAction({ id, description, method, tag, value, currency, exchangeRates });\n      this.setState(({\n        id: id + 1,\n      }));\n    } else {\n      let getExpenseToEdit = expenses.find((expense) => expense.id === idToEdit);\n\n      getExpenseToEdit = {\n        id: idToEdit,\n        description,\n        exchangeRates,\n        currency,\n        method,\n        tag,\n        value,\n      };\n\n      const deleteOldValue = expenses.filter((expense) => expense.id !== idToEdit);\n      const expensesEdited = [...deleteOldValue, getExpenseToEdit];\n      expensesEdited.sort((a, b) => a.id - b.id);\n      console.log(deleteOldValue, expensesEdited);\n      deleteExpenses(expensesEdited);\n      editExpenses('Adicionar despesa');\n    }\n  }\n\n  render() {\n    const { value, description, currency, method, tag, exchangeRates } = this.state;\n    const { handleChange, addOrEditExpenses, handleSubmit } = this;\n    const paymentMethods = ['Dinheiro', 'Cartão de Crédito', 'Cartão de Débito'];\n    const tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const currencyCodes = Object.values(exchangeRates);\n\n    return (\n      <form onSubmit={ handleSubmit }>\n        <div className=\"wallet-container\">\n          <ExpensesInput\n            name=\"value\"\n            type=\"number\"\n            info={ value }\n            onChange={ handleChange }\n          />\n          <ExpensesInput\n            name=\"description\"\n            type=\"text\"\n            info={ description }\n            onChange={ handleChange }\n          />\n          <ExpensesSelect\n            name=\"currency\"\n            onChange={ handleChange }\n            info={ currency }\n            data={ currencyCodes }\n          />\n          <ExpensesSelect\n            name=\"method\"\n            onChange={ handleChange }\n            info={ method }\n            data={ paymentMethods }\n          />\n          <ExpensesSelect\n            name=\"tag\"\n            onChange={ handleChange }\n            info={ tag }\n            data={ tags }\n          />\n          <AddExpenseButton\n            addExpense={ addOrEditExpenses }\n          />\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  buttonText: state.wallet.buttonText,\n  idToEdit: state.wallet.idToEdit,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  walletAction: (expenses) => dispatch(walletExpenses(expenses)),\n  deleteExpenses: (expenses) => dispatch(\n    deleteExpenseAction(expenses),\n  ),\n  editExpenses: (buttonText) => dispatch(\n    editExpenseAction(buttonText),\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesBoard);\n\nExpensesBoard.propTypes = {\n  walletAction: PropTypes.func.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  idToEdit: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(Object).isRequired,\n  deleteExpenses: PropTypes.func.isRequired,\n  editExpenses: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../Styles/Wallet.css';\nimport Header from '../Components/Header';\nimport ExpensesTable from '../Components/ExpensesTable';\nimport ExpensesBoard from '../Components/ExpensesBoard';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createLogin = this.createLogin.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleExpenses = this.handleExpenses.bind(this);\n  }\n\n  createLogin() {\n    const { email } = this.props;\n    const toMatch = email.indexOf('@');\n    const user = `_${email[0].toUpperCase()}${email.substr(1, toMatch - 1)}_`;\n    return user;\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleExpenses() {\n    const { expenses } = this.props;\n    const precision = 100;\n\n    const expensesArray = expenses.map(({ exchangeRates,\n      currency, value }) => {\n      const currencies = Object.values(exchangeRates);\n      const correctCurrency = currencies.filter((curr) => curr.code === currency);\n      const calc = Number(value) * correctCurrency[0].ask;\n      const correctExpense = parseInt(calc * precision, 10) / precision;\n      return correctExpense;\n    });\n\n    if (expenses.length) {\n      const totalExpenses = parseInt(expensesArray\n        .reduce((a, b) => a + b) * precision, 10) / precision;\n      return totalExpenses;\n    }\n    return 0;\n  }\n\n  render() {\n    this.handleExpenses();\n    const email = localStorage.getItem('email');\n    const toMatch = email.indexOf('@');\n    let user;\n    if (email) {\n      user = `_${email[0].toUpperCase()}${email.substr(1, toMatch - 1)}_`;\n    }\n    return (\n      <div className=\"wallet-style\">\n        <Header user={ user } email={ email } handleExpenses={ this.handleExpenses } />\n        <ExpensesBoard />\n        <ExpensesTable />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Wallet);\n\nWallet.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  // Initing project!\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/carteira\" component={ Wallet } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}